/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.entities.Trains;
import org.example.entities.User;
import org.example.services.TrainService;
import org.example.services.UserService;
import org.example.util.UserServiceUtil;
import java.io.IOException;
import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;


public class App {
    // done : signup
    // done : login
    // done : isuserexists -> use optional and stream in login
    // done : hashed password
    // done : menu based program
    // done : auto assign unique id
    // done : add trains in json file using object mapper
    // done : search train should give list of station and time
    // done : calculating total no. of seats
    // done : displaying seats layout
    // done : book tickets
    // todo : update seats
    // todo : Cancel my Booking



    public static void main(String[] args) {
        UserService userService ;
        System.out.println("App started!");
        Scanner input = new Scanner(System.in);
        User user;
        UserServiceUtil userServiceUtil;
        TrainService trainService;
        try{
            trainService = new TrainService();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }


        try{
        userService = new UserService(); } catch (IOException e) {
            throw new RuntimeException(e);
        }

        int option = 0 ;
        while(option != 4) {    //  block main menu
            System.out.println( """
                                1. To SignUp\s
                                2. To Login\s
                                3. admin dashboard\s
                                4. To exit app\s""");
            System.out.println("choose options to work upon : ");
            option = input.nextInt();
//            option = 2;

            switch (option) { // block signup
                case 1: //option
                    System.out.println("Enter your name: ");
                    String name = input.next();
                    System.out.println("Enter your userName: ");
                    String userName = input.next();
                    System.out.println("Enter your password: ");
                    String password = input.next();
                    byte[] salt = UserServiceUtil.getSalt();
                    try {
                        user = new User(UUID.randomUUID().toString(),name, userName, UserServiceUtil.hashPassword(password, salt));
                        userService.signUp(user);
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case 2: //option   // block login
                    System.out.println("Enter your userName: ");
                    String LoginUserName = input.next();
                    System.out.println("Enter your password: ");
                    String LoginPassword = input.next();
                    user = new User(LoginUserName, LoginPassword);
//                    user = new User("12345", "12345");
                    try {
                        //userService = new UserService(user);
                        userService.login(user);
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }

                    int option_after_login = 0;
                        while(option_after_login != 3){     // block menu after login
                            System.out.println("""
                                    1. search trains\s
                                    2. Book tickets\s
                                    3. To logout\s
                                    """);
                            System.out.println("choose options to work upon : ");
//                            option_after_login = 1;
                            option_after_login = input.nextInt();

                            switch(option_after_login){         // block search train
                                case 1: //option_after_login
                                    System.out.println("Enter source station: ");
                                    String source = input.next();
                                    System.out.println("Enter destination : ");
                                    String destination = input.next();
                                    List<Trains> train = trainService.searchTrains(user,source,destination);
//                                    List<Trains> train = trainService.searchTrains(user,"madhepura","saharsa");
                                    AtomicInteger index = new AtomicInteger(1);
                                    train.forEach(t ->System.out.printf(index.getAndIncrement() + "."  + """                                                                                                                   
                                            train no. %s
                                            train stations times: %s
                                            """, t.getTrainNo() ,t.getStationTime()));

                                                                // block fetch train
                                    System.out.println("Choose option from list shown in searches : ");
                                    int list = input.nextInt();
                                    Trains fetchedTrain = trainService.fetchTrain(train.get(list-1).getTrainId());

                                    String fetchedTrainNo = fetchedTrain.getTrainNo();
                                    String fetchedTrainFirstStation = fetchedTrain.getStations().getFirst();
                                    String fetchedTrainLastStation = fetchedTrain.getStations().getLast();
                                    long fetchedTrainTotalSeatsAvailable = fetchedTrain.getSeats().stream().flatMap(List::stream).filter(seat -> seat.equals("0")).count();
                                    System.out.printf("You are booking train %s from %s to %s and total available seats are %d. \n",
                                            fetchedTrainNo,fetchedTrainFirstStation,fetchedTrainLastStation,fetchedTrainTotalSeatsAvailable);

                                    System.out.println("Available seats are: ");
                                    List<List<String>> seats = fetchedTrain.getSeats();
                                    record Position(int x, int y) {}
                                    Map<Position,Integer> seatMap = new HashMap<>();
                                    for(int i = 0 ; i < seats.size();i++){
                                        for(int j = 0 ; j < seats.get(i).size() ; j++){
                                            if(!seatMap.containsKey(new Position(i,j))){
                                                System.out.print(i + "" + j + " ");
                                                seatMap.put(new Position(i,j) ,0);
                                            }else if (seatMap.get(new Position(i,j)) == 1){
                                                System.out.print("NA");

                                            }

                                        }System.out.println();
                                    }
                                    System.out.println();

                                                            // block seats booking by user
                                    System.out.println("Select seats no from available seats: ");
                                    int seatInput = input.nextInt();
                                    int x = seatInput / 10;
                                    int y = seatInput % 10;
                                    if(seatMap.containsKey(new Position(x,y))) {
                                        seatMap.put(new Position(x,y),1);
                                    }
                                    else System.out.println("Please enter seat no from given layout!");

                                    for(int i = 0 ; i < seats.size();i++){
                                        for(int j = 0 ; j < seats.get(i).size() ; j++){
                                            if(!seatMap.containsKey(new Position(i,j)) || seatMap.get(new Position(i,j)) != 1){
                                                System.out.print(i + "" + j + " ");
                                                seatMap.put(new Position(i,j) ,0);
                                            }else if (seatMap.get(new Position(i,j)) == 1){
                                                System.out.print("NA" + " ");
                                            }

                                        }System.out.println();
                                    }
                                    System.out.println();



                                    break;
                                case 2: //option_after_login // block logout
                                    break;
                                default:
                                    System.out.println("you should not enter other than the provided options.");
                                    break;
                            }
                        }
                    break; // case 2: //option      // block admin dashboard
                case 3: // option
                    int option_for_admin =0;        // block admin menu
                    while(option_for_admin != 3){
                        System.out.println("you are in admin dashboard: ");
                        System.out.println("Choose from option to perform following actions: ");
                        System.out.println("""
                                1. add trains\s
                                2. remove trains\s
                                3. to exit dashboard""");
                        option_for_admin = input.nextInt();
                        switch (option_for_admin){
                            case 1: //option_for_admin          // block add train
                                List<String> list = new ArrayList<>();
                                System.out.println("enter stations name from where train start to destination and corresponding time separate with coma (seperate stations with semicolon): ");
                                String stationDetails = input.next();
                                System.out.println("Enter train no. : ");
                                String trainNo = input.next();
                                List<List<String>> seats = new ArrayList<>(
                                        List.of(
                                                List.of("0", "0", "0", "0", "0", "0"),
                                                List.of("0", "0", "0", "0", "0", "0"),
                                                List.of("0", "0", "0", "0", "0", "0")
                                        )
                                );

                                try{
                                    trainService.addTrains(stationDetails,seats,trainNo);
                                } catch (IOException e) {
                                    throw new RuntimeException(e);
                                }
                                break;

                            case 2: //option_for_admin          // block remove train
                                break;
                        }
                    }
            }
        }
    }
}
